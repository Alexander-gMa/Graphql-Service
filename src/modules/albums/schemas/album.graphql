type Album {
    id: ID!
    name: String
    released: Int
    artists: [Artist]
    bands: [Band]
    tracks: [Track]
    genres: [Genre]
    image: String
}

input CreateAlbumInput {
  released: Int
  image: String
  name: String!
  artistsIds: [ID!]
  bandsIds: [ID!]
  trackIds: [ID!]
  genresIds: [ID!]
}

input UpdateAlbumInput {
  released: Int
  image: String
  name: String
  artistsIds: [ID!]
  bandsIds: [ID!]
  trackIds: [ID!]
  genresIds: [ID!]
}

type Query {
  album(id: ID!): Album
  albums(limit: Int, offset: Int): [Album]
}

type Mutation {
  createAlbum(album: CreateAlbumInput!): Album
  updateAlbum(id:ID!, album: UpdateAlbumInput!): Album
  deleteAlbum(id:ID!): DEL
}